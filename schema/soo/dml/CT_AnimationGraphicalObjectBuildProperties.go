// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// DO NOT EDIT: generated by unioffice ECMA-376 generator
//
// Use of this software package and source code is governed by the terms of the
// UniDoc End User License Agreement (EULA) that is available at:
// https://unidoc.io/eula/
// A trial license code for evaluation can be obtained at https://unidoc.io website.

package dml

import (
	"encoding/xml"

	"github.com/unidoc/unioffice"
)

type CT_AnimationGraphicalObjectBuildProperties struct {
	BldDgm   *CT_AnimationDgmBuildProperties
	BldChart *CT_AnimationChartBuildProperties
}

func NewCT_AnimationGraphicalObjectBuildProperties() *CT_AnimationGraphicalObjectBuildProperties {
	ret := &CT_AnimationGraphicalObjectBuildProperties{}
	return ret
}

func (m *CT_AnimationGraphicalObjectBuildProperties) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(start)
	if m.BldDgm != nil {
		sebldDgm := xml.StartElement{Name: xml.Name{Local: "a:bldDgm"}}
		e.EncodeElement(m.BldDgm, sebldDgm)
	}
	if m.BldChart != nil {
		sebldChart := xml.StartElement{Name: xml.Name{Local: "a:bldChart"}}
		e.EncodeElement(m.BldChart, sebldChart)
	}
	e.EncodeToken(xml.EndElement{Name: start.Name})
	return nil
}

func (m *CT_AnimationGraphicalObjectBuildProperties) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	// initialize to default
lCT_AnimationGraphicalObjectBuildProperties:
	for {
		tok, err := d.Token()
		if err != nil {
			return err
		}
		switch el := tok.(type) {
		case xml.StartElement:
			switch el.Name {
			case xml.Name{Space: "http://schemas.openxmlformats.org/drawingml/2006/main", Local: "bldDgm"},
				xml.Name{Space: "http://purl.oclc.org/ooxml/drawingml/main", Local: "bldDgm"}:
				m.BldDgm = NewCT_AnimationDgmBuildProperties()
				if err := d.DecodeElement(m.BldDgm, &el); err != nil {
					return err
				}
			case xml.Name{Space: "http://schemas.openxmlformats.org/drawingml/2006/main", Local: "bldChart"},
				xml.Name{Space: "http://purl.oclc.org/ooxml/drawingml/main", Local: "bldChart"}:
				m.BldChart = NewCT_AnimationChartBuildProperties()
				if err := d.DecodeElement(m.BldChart, &el); err != nil {
					return err
				}
			default:
				unioffice.Log("skipping unsupported element on CT_AnimationGraphicalObjectBuildProperties %v", el.Name)
				if err := d.Skip(); err != nil {
					return err
				}
			}
		case xml.EndElement:
			break lCT_AnimationGraphicalObjectBuildProperties
		case xml.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AnimationGraphicalObjectBuildProperties and its children
func (m *CT_AnimationGraphicalObjectBuildProperties) Validate() error {
	return m.ValidateWithPath("CT_AnimationGraphicalObjectBuildProperties")
}

// ValidateWithPath validates the CT_AnimationGraphicalObjectBuildProperties and its children, prefixing error messages with path
func (m *CT_AnimationGraphicalObjectBuildProperties) ValidateWithPath(path string) error {
	if m.BldDgm != nil {
		if err := m.BldDgm.ValidateWithPath(path + "/BldDgm"); err != nil {
			return err
		}
	}
	if m.BldChart != nil {
		if err := m.BldChart.ValidateWithPath(path + "/BldChart"); err != nil {
			return err
		}
	}
	return nil
}
