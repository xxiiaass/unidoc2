// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// DO NOT EDIT: generated by unioffice ECMA-376 generator
//
// Use of this software package and source code is governed by the terms of the
// UniDoc End User License Agreement (EULA) that is available at:
// https://unidoc.io/eula/
// A trial license code for evaluation can be obtained at https://unidoc.io website.

package dml

import (
	"encoding/xml"
	"fmt"
)

type CT_TextBulletSizeFollowText struct {
}

func NewCT_TextBulletSizeFollowText() *CT_TextBulletSizeFollowText {
	ret := &CT_TextBulletSizeFollowText{}
	return ret
}

func (m *CT_TextBulletSizeFollowText) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(xml.EndElement{Name: start.Name})
	return nil
}

func (m *CT_TextBulletSizeFollowText) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	// initialize to default
	// skip any extensions we may find, but don't support
	for {
		tok, err := d.Token()
		if err != nil {
			return fmt.Errorf("parsing CT_TextBulletSizeFollowText: %s", err)
		}
		if el, ok := tok.(xml.EndElement); ok && el.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TextBulletSizeFollowText and its children
func (m *CT_TextBulletSizeFollowText) Validate() error {
	return m.ValidateWithPath("CT_TextBulletSizeFollowText")
}

// ValidateWithPath validates the CT_TextBulletSizeFollowText and its children, prefixing error messages with path
func (m *CT_TextBulletSizeFollowText) ValidateWithPath(path string) error {
	return nil
}
